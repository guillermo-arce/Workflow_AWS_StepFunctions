service: step-function

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

custom:
  settings:
    PARKING_TABLE_NAME: parkingTable

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-3
  profile: default
  environment: ${self:custom.settings}

  #Revisar porque creo que es inutil
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "states:ListStateMachines"
      - "states:StartExecution"
      - "dynamodb:DeleteItem"
      - "dynamodb:PutItem"
      - "dynamodb:GetItem"
    Resource: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:*"

resources: 
    Resources:
      parkingTable: 
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:custom.settings.PARKING_TABLE_NAME}
          AttributeDefinitions:
            - AttributeName: carId
              AttributeType: S
          KeySchema:
            - AttributeName: carId
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

functions:
  executeStepFunction:
    handler: handler.executeStepFunction
    events:
      - http:
          path: run
          method: get
          cors: true
  inputValidation:
    handler: handler.inputValidation
  getCar:
    handler: handler.getCar
  removeCar:
    handler: handler.removeCar
  addCar:
    handler: handler.addCar
  getCars:
    handler: handler.getCars


stepFunctions:
  stateMachines:
    testingStateMachine:
      name: TestingStateMachine
      definition:
        StartAt: InputValidation
        States:
          InputValidation:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-inputValidation
            Next: ProcessInput
          ProcessInput:
            Type: Choice
            Choices : 
              - Variable: "$.operationType"
                StringEquals: "INVALID"
                Next: InputError
            Default: GetCar
          InputError:
            Type: Fail
            Cause: "Wrong Inputs"
          GetCar:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-getCar
            Next: CheckOperation
          CheckOperation:
            Type: Choice
            Choices:
              - And:
                  - Variable: $.operationType
                    StringEquals: ADD
                  - Variable: $.exists
                    StringEquals: 'TRUE'
                Next: EndProcess
              - And:
                  - Variable: $.operationType
                    StringEquals: REMOVE
                  - Variable: $.exists
                    StringEquals: 'FALSE'
                Next: EndProcess
            Default: ProcessOperation
          ProcessOperation:
            Type: Choice
            Choices : 
              - Variable: "$.operationType"
                StringEquals: "ADD"
                Next: AddCar
              - Variable: "$.operationType"
                StringEquals: "REMOVE"
                Next: RemoveCar
          AddCar:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-addCar
            Next: EndProcess
          RemoveCar:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-removeCar
            Next: EndProcess
          EndProcess:
            Type: Pass
            End: true
